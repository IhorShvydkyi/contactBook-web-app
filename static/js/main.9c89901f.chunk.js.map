{"version":3,"sources":["redux/auth/auth-operations.ts","redux/auth/auth-slice.ts","redux/auth/auth-selectors.ts","redux/contacts/contacts-operations.ts","redux/contacts/contacts-slices.ts","redux/store.ts","components/Container/Container.styled.tsx","components/Container/Container.tsx","components/AppBar/AuthNav/AuthNavigation.styled.tsx","components/AppBar/AuthNav/AuthNavigation.tsx","components/AppBar/Navigation/Navigation.styled.tsx","components/AppBar/Navigation/Navigation.tsx","components/AppBar/UserMenu/UserMenu.styled.tsx","components/AppBar/UserMenu/UserMenu.tsx","components/AppBar/AppBar.styled.tsx","components/AppBar/AppBar.tsx","pages/HomePage/HomePage.styled.tsx","pages/HomePage/HomePage.tsx","components/Forms/Forms.styled.tsx","components/Forms/LogInForm/LogInForm.tsx","pages/LogInPage/LogInPage.styled.tsx","pages/LogInPage/LogInPage.tsx","components/Forms/RegisterForm/RegisterForm.tsx","pages/RegisterPage/RegisterPage.styled.tsx","pages/RegisterPage/RegisterPage.tsx","components/Contacts/ContactEditModal/ContactEditModal.styled.tsx","components/Contacts/ContactEditModal/ContactEditModal.tsx","components/Contacts/ContactsFilter/ContactsFilter.styled.tsx","components/Contacts/ContactsFilter/ContactsFilter.tsx","components/Contacts/ContactsList/ContactsList.styled.tsx","components/Contacts/ContactsList/ContactsList.tsx","pages/ContactsPage/ContactsPage.styled.tsx","components/Contacts/ContactsForm/ContatcsForm.styled.tsx","components/Contacts/ContactsForm/ContactsForm.tsx","pages/ContactsPage/ContactsPage.tsx","components/Routes/PrivateRoute.tsx","components/Routes/PublicRoute.tsx","App.tsx","index.tsx"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","concat","register","createAsyncThunk","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","credentials","_yield$axios$post","data","wrap","_context","prev","next","post","sent","abrupt","t0","stop","_x","apply","arguments","login","_ref2","_callee2","_yield$axios$post2","_context2","_x2","logout","_callee3","_context3","fetchCurrentUser","_ref4","_callee4","_","thunkAPI","state","persistedToken","_yield$axios$get","_context4","getState","auth","rejectWithValue","get","_x3","_x4","operations","authSlice","createSlice","name","initialState","user","email","isLoggedIn","extraReducers","_extraReducers","_defineProperty","authOperations","fulfilled","action","payload","authSelectors","getLoggedIn","getUserName","fetchContacts","message","addContact","contact","_ref3","deleteContact","_ref6","contactId","_ref5","_yield$axios$delete","delete","status","_x5","_x6","updateContact","_ref9","_ref7","_ref8","id","number","_yield$axios$patch","patch","_x7","_x8","contactsSlice","items","filter","isLoading","error","showModal","editContact","reducers","updateFilter","openModal","closeModal","contactsOperations","push","map","item","_contactsSlice$action","actions","middleware","_toConsumableArray","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","MainContainer","styled","div","_templateObject","_taggedTemplateLiteral","Container","children","_jsx","AuthNav","nav","AuthNavList","ul","_templateObject2","AuthNavListItem","li","_templateObject3","AuthNavLink","NavLink","_templateObject4","AuthNavavigation","_jsxs","to","Nav","NavList","NavListItem","NavigationLink","Navigation","UserMenuStyled","UserMenuSpan","span","LogOutButton","button","IconButton","BiLogOutCircle","UserMenu","dispatch","useDispatch","useSelector","allowedEmoji","role","Math","floor","random","length","type","onClick","AppBarStyled","AppBar","Title","h1","HomePage","Form","form","Label","label","Input","input","FormButton","BiLogInCircle","_templateObject5","RedirectMessage","p","_templateObject6","RedirectLink","Link","_templateObject7","LogInForm","_useState","useState","_useState2","_slicedToArray","setEmail","_useState3","_useState4","password","setPassword","handleChange","_ref$target","target","value","onSubmit","e","preventDefault","autoComplete","htmlFor","onChange","LogInPageStyled","LogInPage","RegisterForm","setName","_useState5","_useState6","RegisterPageStyled","RegisterPage","Modal","Overlay","FormModal","LabelModal","InputModal","SaveButton","ExitButton","modalRoot","document","querySelector","ContactEditModal","setId","setNumber","useEffect","handleSubmit","createPortal","FilterStyled","ContactsFilter","currentTarget","ContactListStyled","ContactItem","ContactItemName","EditButton","EditIconButton","FiEdit","DeleteButton","DeleteIconButton","AiOutlineDelete","_templateObject8","ContactsList","filteredContacts","toLowerCase","includes","_Fragment","ContactPageStyled","ContactFormButton","HiUserAdd","ContactsForm","find","alert","pattern","title","required","ContactsPage","PrivateRoute","_ref$redirectPath","redirectPath","Navigate","replace","PublicRoute","_ref$restricted","restricted","App","Suspense","fallback","Routes","Route","path","element","ToastContainer","ReactDOM","render","React","StrictMode","BrowserRouter","Provider","PersistGate","loading","getElementById"],"mappings":"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","file":"static/js/main.9c89901f.chunk.js","sourcesContent":["import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\ntype Login = {\n  email: string;\n  password: string;\n};\n\ntype Register = {\n  name: string;\n  email: string;\n  password: string;\n};\n\nconst token = {\n  set(token: any) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = createAsyncThunk(\n  'auth/register',\n  async (credentials: Register) => {\n    try {\n      const { data } = await axios.post('/users/signup', credentials);\n      token.set(data.token);\n      // console.log(data);\n      return data;\n    } catch (error) {\n      // TODO: Добавить обработку ошибки error.message\n    }\n  },\n);\nconst login = createAsyncThunk('auth/login', async (credentials: Login) => {\n  try {\n    const { data } = await axios.post('/users/login', credentials);\n    token.set(data.token);\n    // console.log(data);\n    return data;\n  } catch (error) {\n    // TODO: Добавить обработку ошибки error.message\n  }\n});\n\nconst logout = createAsyncThunk('auth/logout', async () => {\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n  } catch (error) {\n    // TODO: Добавить обработку ошибки error.message\n  }\n});\n\nconst fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    // @ts-expect-error TS(2571): Object is of type 'unknown'.\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      // @ts-expect-error TS(2554): Expected 1 arguments, but got 0.\n      return thunkAPI.rejectWithValue();\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (error) {\n      // TODO: Добавить обработку ошибки error.message\n    }\n  },\n);\n\nconst operations = {\n  register,\n  login,\n  logout,\n  fetchCurrentUser,\n};\n\nexport default operations;\n","import { createSlice } from '@reduxjs/toolkit';\nimport authOperations from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n};\n\n// @ts-expect-error TS(2345): Argument of type '{ name: \"auth\"; initialState: { ... Remove this comment to see the full error message\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    // @ts-expect-error TS(2464): A computed property name must be of type 'string',... Remove this comment to see the full error message\n    [authOperations.register.fulfilled](state: any, action: any) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    // @ts-expect-error TS(2464): A computed property name must be of type 'string',... Remove this comment to see the full error message\n    [authOperations.login.fulfilled](state: any, action: any) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    // @ts-expect-error TS(2464): A computed property name must be of type 'string',... Remove this comment to see the full error message\n    [authOperations.logout.fulfilled](state: any, _: any) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    // @ts-expect-error TS(2464): A computed property name must be of type 'string',... Remove this comment to see the full error message\n    [authOperations.fetchCurrentUser.fulfilled](state: any, action: any) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","const getLoggedIn = (state: any) => state.auth.isLoggedIn;\nconst getUserName = (state: any) => state.auth.user.name;\n\nconst authSelectors = {\n  getLoggedIn,\n  getUserName,\n};\n\nexport default authSelectors;\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\ntype UpdateContactArgs = {\n  id: string;\n  name: string;\n  number: string;\n};\n\ntype AddContactArgs = {\n  name: string;\n  number: string;\n};\n\ntype DeleteContactArgs = {\n  contactId: string;\n};\n\nconst fetchContacts = createAsyncThunk(\n  '/contacts/fetchContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.get('/contacts');\n      return data;\n    } catch (error: any) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nconst addContact = createAsyncThunk(\n  '/contacts/addContact',\n  async (contact: AddContactArgs, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/contacts', contact);\n      return data;\n    } catch (error: any) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nconst deleteContact = createAsyncThunk(\n  '/contacts/deleteContact',\n  async (contactId: DeleteContactArgs, { rejectWithValue }) => {\n    try {\n      const { status } = await axios.delete(`/contacts/${contactId}`);\n      return contactId;\n    } catch (error: any) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nconst updateContact = createAsyncThunk(\n  '/contacts/updateContact',\n  async ({ id, name, number }: UpdateContactArgs, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.patch(`/contacts/${id}`, { name, number });\n      return data;\n    } catch (error: any) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nconst operations = {\n  fetchContacts,\n  addContact,\n  deleteContact,\n  updateContact,\n};\n\nexport default operations;\n","import { createSlice } from '@reduxjs/toolkit';\nimport contactsOperations from './contacts-operations';\n\nconst initialState = {\n  items: [],\n  filter: '',\n  isLoading: false,\n  error: null,\n  showModal: false,\n  editContact: {},\n};\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState,\n  reducers: {\n    updateFilter: (state, action) => {\n      state.filter = action.payload;\n    },\n    openModal: (state, action) => {\n      state.showModal = true;\n      state.editContact = state.items.filter(\n        // @ts-expect-error TS(2339): Property 'id' does not exist on type 'never'.\n        contact => contact.id === action.payload,\n      );\n    },\n    closeModal: (state, _) => {\n      state.showModal = false;\n    },\n  },\n  extraReducers: {\n    // @ts-expect-error TS(2464): A computed property name must be of type 'string',... Remove this comment to see the full error message\n    [contactsOperations.fetchContacts.fulfilled](state: any, action: any) {\n      state.items = action.payload;\n    },\n    // @ts-expect-error TS(2464): A computed property name must be of type 'string',... Remove this comment to see the full error message\n    [contactsOperations.addContact.fulfilled](state: any, action: any) {\n      state.items.push(action.payload);\n    },\n    // @ts-expect-error TS(2464): A computed property name must be of type 'string',... Remove this comment to see the full error message\n    [contactsOperations.deleteContact.fulfilled](state: any, action: any) {\n      state.items = state.items.filter(\n        (contact: any) => contact.id !== action.payload,\n      );\n    },\n    // @ts-expect-error TS(2464): A computed property name must be of type 'string',... Remove this comment to see the full error message\n    [contactsOperations.updateContact.fulfilled](state: any, action: any) {\n      state.items = state.items.map((item: any) => item.id === action.payload.id ? action.payload : item,\n      );\n    },\n  },\n});\n\nexport const { updateFilter, openModal, closeModal } = contactsSlice.actions;\n\nexport default contactsSlice.reducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { authReducer } from './auth';\nimport { contactsReducer } from './contacts';\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\nconst authPersistConfig = { key: 'auth', storage, whitelist: ['token'] };\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  margin: auto;\n  padding: 25px 20px;\n  border-radius: 10px;\n`;\n","import React from 'react';\nimport { MainContainer } from './Container.styled';\n\nexport const Container = ({ children }: any) => {\n  return <MainContainer>{children}</MainContainer>;\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const AuthNav = styled.nav`\n  padding: 5, 0;\n`;\n\nexport const AuthNavList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  font-size: 25px;\n`;\n\nexport const AuthNavListItem = styled.li`\n  margin-right: 0px;\n  margin-bottom: 10px;\n  &:not(:last-child) {\n    margin-right: 20px;\n  }\n`;\n\nexport const AuthNavLink = styled(NavLink)`\n  text-decoration: none;\n  color: #fff;\n  &:active,\n  &:hover {\n    color: #e6e5be;\n  }\n`;\n","import React from 'react';\nimport {\n  AuthNav,\n  AuthNavList,\n  AuthNavListItem,\n  AuthNavLink,\n} from './AuthNavigation.styled';\n\nexport const AuthNavavigation = () => {\n  return (\n    <AuthNav>\n      <AuthNavList>\n        <AuthNavListItem>\n          <AuthNavLink to=\"/logIn\">Log in</AuthNavLink>\n        </AuthNavListItem>\n        <AuthNavListItem>\n          <AuthNavLink to=\"/register\">Register</AuthNavLink>\n        </AuthNavListItem>\n      </AuthNavList>\n    </AuthNav>\n  );\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Nav = styled.nav`\n  padding: 5, 0;\n`;\n\nexport const NavList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  font-size: 25px;\n`;\n\nexport const NavListItem = styled.li`\n  margin-right: 0px;\n  margin-bottom: 10px;\n  &:not(:last-child) {\n    margin-right: 20px;\n  }\n`;\n\nexport const NavigationLink = styled(NavLink)`\n  text-decoration: none;\n  color: #fff;\n  &:active,\n  &:hover {\n    color: #e6e5be;\n  }\n`;\n","import React from 'react';\nimport { Nav, NavList, NavListItem, NavigationLink } from './Navigation.styled';\n\nexport const Navigation = () => {\n  return (\n    <Nav>\n      <NavList>\n        <NavListItem>\n          <NavigationLink to=\"/\">Home</NavigationLink>\n        </NavListItem>\n        <NavListItem>\n          <NavigationLink to=\"/contacts\">Contacts</NavigationLink>\n        </NavListItem>\n      </NavList>\n    </Nav>\n  );\n};\n","import styled from '@emotion/styled';\nimport { BiLogOutCircle } from 'react-icons/bi';\n\nexport const UserMenuStyled = styled.div`\n  display: flex;\n`;\n\nexport const UserMenuSpan = styled.span`\n  font-size: 25px;\n  margin-right: 20px;\n`;\n\nexport const LogOutButton = styled.button`\n  display: flex;\n  align-items: center;\n  font-size: 18px;\n  font-weight: 600;\n  padding: 5px 5px;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 5px;\n  border: 1px solid #6b6b6b;\n  background: rgba(255, 255, 255, 0.4);\n  color: white;\n  cursor: pointer;\n  &:active,\n  &:hover {\n    color: #e6e5be;\n  }\n`;\n\nexport const IconButton = styled(BiLogOutCircle)`\n  margin-left: 10px;\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors, authOperations } from '../../../redux/auth';\nimport {\n  UserMenuStyled,\n  UserMenuSpan,\n  LogOutButton,\n  IconButton,\n} from './UserMenu.styled';\n\nexport const UserMenu = () => {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUserName);\n\n  const allowedEmoji = [...'😊🙃🤪🤓🤯😴💩👻👽🤖👾👐🖖✌️🤟🤘🤙👋🐭🦕🦖🐉'];\n\n  return (\n    <UserMenuStyled>\n      <UserMenuSpan>\n        Welcome, {name}{' '}\n        <span role=\"img\" aria-label=\"hello\">\n          {[...allowedEmoji][Math.floor(Math.random() * allowedEmoji.length)]}\n        </span>\n      </UserMenuSpan>\n      <LogOutButton\n        type=\"button\"\n        onClick={() => {\n          dispatch(authOperations.logout());\n        }}\n      >\n        Log out\n        <IconButton />\n      </LogOutButton>\n    </UserMenuStyled>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const AppBarStyled = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import { useSelector } from 'react-redux';\nimport React from 'react';\n\nimport { AuthNavavigation } from './AuthNav/AuthNavigation';\nimport { Navigation } from './Navigation/Navigation';\nimport { UserMenu } from './UserMenu/UserMenu';\nimport { AppBarStyled } from './AppBar.styled';\nimport { authSelectors } from '../../redux/auth';\n\nexport const AppBar = () => {\n  const isLoggedIn = useSelector(authSelectors.getLoggedIn);\n  return (\n    <AppBarStyled>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNavavigation />}\n    </AppBarStyled>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  text-align: center;\n  margin: 200px auto;\n  font-size: 45px;\n`;\n","import React from 'react';\nimport { Title } from './HomePage.styled';\nexport const HomePage = () => {\n  return <Title>Your contacts in one place</Title>;\n};\n","import styled from '@emotion/styled';\nimport { BiLogInCircle } from 'react-icons/bi';\nimport { Link } from 'react-router-dom';\n\nexport const Form = styled.form`\n  width: 400px;\n  margin: 100px 0;\n  margin-bottom: 15px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n  font-size: 18px;\n`;\n\nexport const Input = styled.input`\n  margin-top: 10px;\n  border-radius: 5px;\n`;\n\nexport const FormButton = styled.button`\n  display: flex;\n  align-items: center;\n  font-size: 18px;\n  font-weight: 600;\n  padding: 5px 5px;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 5px;\n  border: 1px solid #6b6b6b;\n  background: rgba(255, 255, 255, 0.4);\n  color: white;\n  cursor: pointer;\n  &:active,\n  &:hover {\n    color: #e6e5be;\n  }\n`;\n\nexport const IconButton = styled(BiLogInCircle)`\n  margin-left: 10px;\n`;\n\nexport const RedirectMessage = styled.p`\n  font-size: 16px;\n  font-weight: 600;\n`;\n\nexport const RedirectLink = styled(Link)`\n  text-decoration: none;\n  color: #e6e5be;\n  &:active,\n  &:hover {\n    color: #807808;\n  }\n`;\n","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n// import { useNavigate } from 'react-router-dom';\n\nimport { authOperations } from '../../../redux/auth';\nimport {\n  Form,\n  Label,\n  Input,\n  FormButton,\n  IconButton,\n  RedirectMessage,\n  RedirectLink,\n} from '../Forms.styled';\n\nexport const LogInForm = () => {\n  const dispatch = useDispatch();\n  // const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }: any) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    dispatch(authOperations.login({ email, password }));\n    setEmail('');\n    setPassword('');\n    // navigate('/contacts', { replace: true });\n  };\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit} autoComplete=\"off\">\n        <Label htmlFor=\"login\">\n          E-mail\n          <Input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </Label>\n\n        <Label htmlFor=\"password\">\n          Password\n          <Input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </Label>\n        <FormButton type=\"submit\">\n          Log In\n          <IconButton />\n        </FormButton>\n      </Form>\n      <RedirectMessage>\n        If you don`t have an account, please{' '}\n        <RedirectLink to=\"/register\">register</RedirectLink>!\n      </RedirectMessage>\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const LogInPageStyled = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { LogInForm } from '../../components/Forms/LogInForm/LogInForm';\nimport React from 'react';\nimport { LogInPageStyled } from './LogInPage.styled';\n\nexport const LogInPage = () => {\n  return (\n    <LogInPageStyled>\n      <LogInForm />\n    </LogInPageStyled>\n  );\n};\n","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n// import { useNavigate } from 'react-router-dom';\n\nimport { authOperations } from '../../../redux/auth';\nimport { Form, Label, Input, FormButton, IconButton } from '../Forms.styled';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  // const navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }: any) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n    // navigate('/contacts', { replace: true });\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label htmlFor=\"name\">\n        Name\n        <Input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n      </Label>\n\n      <Label htmlFor=\"login\">\n        Email\n        <Input\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n        />\n      </Label>\n\n      <Label htmlFor=\"password\">\n        Password\n        <Input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n        />\n      </Label>\n\n      <FormButton type=\"submit\">\n        Sign up\n        <IconButton />\n      </FormButton>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const RegisterPageStyled = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import React from 'react';\nimport { RegisterForm } from '../../components/Forms/RegisterForm/RegisterForm';\nimport { RegisterPageStyled } from './RegisterPage.styled';\n\nexport const RegisterPage = () => {\n  return (\n    <RegisterPageStyled>\n      <RegisterForm />\n    </RegisterPageStyled>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Modal = styled.div`\n  display: block;\n  max-width: 100%;\n  height: 400px;\n  max-height: 100%;\n  position: fixed;\n  z-index: 100;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 50;\n\n  background-color: rgba(0, 0, 0, 0.8);\n`;\n\nexport const FormModal = styled.form`\n  width: 400px;\n  margin: 100px 0;\n  margin-bottom: 15px;\n`;\n\nexport const LabelModal = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n  font-size: 18px;\n`;\n\nexport const InputModal = styled.input`\n  margin-top: 10px;\n  border-radius: 5px;\n`;\n\nexport const SaveButton = styled.button`\n  display: flex;\n  align-items: center;\n  font-size: 18px;\n  font-weight: 600;\n  padding: 5px 5px;\n  margin-left: auto;\n  margin-bottom: 10px;\n  border-radius: 5px;\n  border: 1px solid #6b6b6b;\n  background: rgba(127, 218, 0, 0.4);\n  color: white;\n  cursor: pointer;\n  &:active,\n  &:hover {\n    color: #e6e5be;\n  }\n`;\n\nexport const ExitButton = styled.button`\n  display: flex;\n  align-items: center;\n  font-size: 18px;\n  font-weight: 600;\n  padding: 5px 5px;\n  margin-left: auto;\n  border-radius: 5px;\n  border: 1px solid #6b6b6b;\n  background: rgba(255, 69, 0, 0.4);\n  color: white;\n  cursor: pointer;\n  &:active,\n  &:hover {\n    color: #e6e5be;\n  }\n`;\n","import { createPortal } from 'react-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useState, useEffect } from 'react';\nimport { contactsOperations } from '../../../redux/contacts';\nimport { closeModal } from '../../../redux/contacts/contacts-slices';\nimport {\n  FormModal,\n  LabelModal,\n  InputModal,\n  SaveButton,\n  ExitButton,\n  Overlay,\n  Modal,\n} from './ContactEditModal.styled';\nimport React from 'react';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const ContactEditModal = () => {\n  const [id, setId] = useState('');\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  // @ts-expect-error TS(2339): Property 'contacts' does not exist on type 'Defaul... Remove this comment to see the full error message\n  const editContact = useSelector(state => state.contacts.editContact);\n\n  useEffect(() => {\n    setId(editContact[0].id);\n    setName(editContact[0].name);\n    setNumber(editContact[0].number);\n  }, [editContact]);\n\n  const handleChange = (e: any) => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    dispatch(contactsOperations.updateContact({ id, name, number }));\n    dispatch(closeModal({}));\n  };\n\n  return createPortal(\n    <Overlay>\n      <Modal>\n        <FormModal onSubmit={handleSubmit}>\n          <LabelModal htmlFor=\"\">\n            {' '}\n            Name\n            <InputModal\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleChange}\n            />\n          </LabelModal>\n          <LabelModal htmlFor=\"\">\n            {' '}\n            Number\n            <InputModal\n              type=\"text\"\n              name=\"number\"\n              value={number}\n              onChange={handleChange}\n            />\n          </LabelModal>\n          <SaveButton type=\"submit\" onClick={handleSubmit}>\n            Save edit contact\n          </SaveButton>\n          <ExitButton type=\"submit\" onClick={() => dispatch(closeModal({}))}>\n            Exit\n          </ExitButton>\n        </FormModal>\n      </Modal>\n    </Overlay>,\n    // @ts-expect-error TS(2345): Argument of type 'Element | null' is not assignabl... Remove this comment to see the full error message\n    modalRoot,\n  );\n};\n","import styled from '@emotion/styled';\n// import { AiOutlineSearch } from 'react-icons/ai';\n\nexport const FilterStyled = styled.div`\n  width: 400px;\n  margin-bottom: 15px;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n  font-size: 18px;\n`;\n\nexport const Input = styled.input`\n  margin-top: 10px;\n  border-radius: 5px;\n`;\n\n// export const FilterButton = styled.button`\n//   display: flex;\n//   align-items: center;\n//   font-size: 18px;\n//   font-weight: 600;\n//   padding: 5px 5px;\n//   margin-left: auto;\n//   margin-right: auto;\n//   border-radius: 5px;\n//   border: 1px solid #6b6b6b;\n//   background: rgba(255, 255, 255, 0.4);\n//   color: white;\n//   cursor: pointer;\n//   &:active,\n//   &:hover {\n//     color: #e6e5be;\n//   }\n// `;\n\n// export const IconButton = styled(AiOutlineSearch)`\n//   margin-left: 10px;\n// `;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { updateFilter } from '../../../redux/contacts/contacts-slices';\nimport {\n  FilterStyled,\n  Label,\n  Input,\n  // @ts-expect-error TS(2305): Module '\"./ContactsFilter.styled\"' has no exported... Remove this comment to see the full error message\n  FilterButton,\n  // @ts-expect-error TS(2305): Module '\"./ContactsFilter.styled\"' has no exported... Remove this comment to see the full error message\n  IconButton,\n} from './ContactsFilter.styled';\nexport const ContactsFilter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = (e: any) => {\n    dispatch(updateFilter(e.currentTarget.value));\n  };\n\n  return (\n    <FilterStyled>\n      <Label>\n        Find your contact\n        <Input\n          type=\"search\"\n          name=\"filter\"\n          onChange={handleChange}\n          autoComplete=\"off\"\n        />\n      </Label>\n      {/* <FilterButton type=\"submit\">\n        Find\n        <IconButton />\n      </FilterButton> */}\n    </FilterStyled>\n  );\n};\n","import styled from '@emotion/styled';\nimport { FiEdit } from 'react-icons/fi';\nimport { AiOutlineDelete } from 'react-icons/ai';\n\nexport const ContactListStyled = styled.ul`\n  margin: 0 auto;\n  width: auto;\n`;\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 18px;\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const ContactItemName = styled.span`\n  width: 250px;\n`;\nexport const EditButton = styled.button`\n  display: flex;\n  align-items: center;\n  font-size: 18px;\n  font-weight: 600;\n  padding: 5px 5px;\n  margin-left: auto;\n  margin-right: 10px;\n  border-radius: 5px;\n  border: 1px solid #6b6b6b;\n  background: rgba(255, 234, 106, 0.4);\n  color: white;\n  cursor: pointer;\n  &:active,\n  &:hover {\n    color: #e6e5be;\n  }\n`;\n\nexport const ContactsListEmptyMessage = styled.p`\n  font-size: 18px;\n  font-weight: 600;\n`;\n\nexport const EditIconButton = styled(FiEdit)`\n  margin-left: 10px;\n`;\n\nexport const DeleteButton = styled.button`\n  display: flex;\n  align-items: center;\n  font-size: 18px;\n  font-weight: 600;\n  padding: 5px 5px;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 5px;\n  border: 1px solid #6b6b6b;\n  background: rgba(255, 69, 0, 0.4);\n  color: white;\n  cursor: pointer;\n  &:active,\n  &:hover {\n    color: #e6e5be;\n  }\n`;\n\nexport const DeleteIconButton = styled(AiOutlineDelete)`\n  margin-left: 10px;\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsOperations } from '../../../redux/contacts';\nimport { openModal } from '../../../redux/contacts/contacts-slices';\nimport {\n  ContactListStyled,\n  ContactItem,\n  ContactItemName,\n  EditButton,\n  EditIconButton,\n  DeleteButton,\n  DeleteIconButton,\n} from './ContactsList.styled';\n\nexport const ContactsList = () => {\n  // @ts-expect-error TS(2339): Property 'contacts' does not exist on type 'Defaul... Remove this comment to see the full error message\n  const items = useSelector(state => state.contacts.items);\n  // @ts-expect-error TS(2339): Property 'contacts' does not exist on type 'Defaul... Remove this comment to see the full error message\n  const filter = useSelector(state => state.contacts.filter);\n\n  const dispatch = useDispatch();\n  const filteredContacts = items.filter((contact: any) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n\n  return (\n    <>\n      {filteredContacts.length === 0 ? (\n        <p>Oops, there is no such contact in your phone!</p>\n      ) : (\n        <ContactListStyled>\n          {filteredContacts.map(({ id, name, number }: any) => (\n            <ContactItem key={id}>\n              <ContactItemName>\n                {name}: {number}{' '}\n              </ContactItemName>\n              <EditButton type=\"submit\" onClick={() => dispatch(openModal(id))}>\n                Edit\n                <EditIconButton />\n              </EditButton>\n              <DeleteButton\n                type=\"button\"\n                onClick={() => dispatch(contactsOperations.deleteContact(id))}\n              >\n                Delete\n                <DeleteIconButton />\n              </DeleteButton>\n            </ContactItem>\n          ))}\n        </ContactListStyled>\n      )}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContactPageStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import styled from '@emotion/styled';\nimport { HiUserAdd } from 'react-icons/hi';\n\nexport const Form = styled.form`\n  width: 400px;\n  margin: 100px 0;\n  margin-bottom: 15px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n  font-size: 18px;\n`;\nexport const Input = styled.input`\n  margin-top: 10px;\n  border-radius: 5px;\n`;\n\nexport const ContactFormButton = styled.button`\n  display: flex;\n  align-items: center;\n  font-size: 18px;\n  font-weight: 600;\n  padding: 5px 5px;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 5px;\n  border: 1px solid #6b6b6b;\n  background: rgba(255, 255, 255, 0.4);\n  color: white;\n  cursor: pointer;\n  &:active,\n  &:hover {\n    color: #e6e5be;\n  }\n`;\n\nexport const IconButton = styled(HiUserAdd)`\n  margin-left: 10px;\n`;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsOperations } from '../../../redux/contacts';\n\nimport {\n  Form,\n  Label,\n  Input,\n  ContactFormButton,\n  IconButton,\n} from './ContatcsForm.styled';\n\nexport const ContactsForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  // @ts-expect-error TS(2339): Property 'contacts' does not exist on type 'Defaul... Remove this comment to see the full error message\n  const items = useSelector(state => state.contacts.items);\n  // @ts-expect-error TS(2339): Property 'auth' does not exist on type 'DefaultRoo... Remove this comment to see the full error message\n  const user = useSelector(state => state.auth.user);\n\n  useEffect(() => {\n    if (user.email) {\n      dispatch(contactsOperations.fetchContacts());\n    }\n  }, [dispatch, user]);\n\n  const handleChange = (e: any) => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    const nameToAdd = items.find(\n      (contact: any) => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (nameToAdd) {\n      return alert(`${name} is already in contacts.`);\n    }\n    dispatch(contactsOperations.addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label htmlFor=\"name\">\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </Label>\n\n      <Label htmlFor=\"password\">\n        Phone number\n        <Input\n          type=\"text\t\"\n          name=\"number\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </Label>\n      <ContactFormButton type=\"submit\">\n        Add to contact\n        <IconButton />\n      </ContactFormButton>\n    </Form>\n  );\n};\n","import { ContactEditModal } from '../../components/Contacts/ContactEditModal/ContactEditModal';\nimport { ContactsFilter } from '../../components/Contacts/ContactsFilter/ContactsFilter';\nimport { ContactsList } from '../../components/Contacts/ContactsList/ContactsList';\nimport { ContactPageStyled } from './ContactsPage.styled';\nimport { useSelector } from 'react-redux';\nimport React from 'react';\nimport { ContactsForm } from '../../components/Contacts/ContactsForm/ContactsForm';\n\nexport const ContactsPage = () => {\n  // @ts-expect-error TS(2339): Property 'contacts' does not exist on type 'Defaul... Remove this comment to see the full error message\n  const showModal = useSelector(state => state.contacts.showModal);\n\n  return (\n    <ContactPageStyled>\n      <ContactsForm />\n      <ContactsFilter />\n      <ContactsList />\n\n      {showModal && <ContactEditModal />}\n    </ContactPageStyled>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nexport const PrivateRoute = ({ children, redirectPath = '/' }: any) => {\n  // @ts-expect-error TS(2339): Property 'auth' does not exist on type 'DefaultRoo... Remove this comment to see the full error message\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n\n  return isLoggedIn ? <>{children}</> : <Navigate to={redirectPath} replace />;\n};\n","import { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nexport const PublicRoute = ({\n  children,\n  redirectPath = '/',\n  restricted = false\n}: any) => {\n  // @ts-expect-error TS(2339): Property 'auth' does not exist on type 'DefaultRoo... Remove this comment to see the full error message\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  if (shouldRedirect) {\n    return <Navigate to={redirectPath} replace />;\n  }\n  return children;\n};\n","import { Route, Routes } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Suspense } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { Container } from './components/Container/Container';\nimport { AppBar } from './components/AppBar/AppBar';\nimport { HomePage } from './pages/HomePage/HomePage';\nimport { LogInPage } from './pages/LogInPage/LogInPage';\nimport { RegisterPage } from './pages/RegisterPage/RegisterPage';\nimport { ContactsPage } from './pages/ContactsPage/ContactsPage';\nimport { authOperations } from './redux/auth';\nimport { PrivateRoute } from './components/Routes/PrivateRoute';\nimport { PublicRoute } from './components/Routes/PublicRoute';\n\nexport const App = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n  return (\n    <>\n      <Container>\n        <AppBar />\n        <Suspense fallback={<div>Loading...</div>}>\n          <Routes>\n            <Route path=\"/\" element={<HomePage />}></Route>\n            <Route\n              path=\"logIn\"\n              element={\n                <PublicRoute redirectPath=\"/contacts\" restricted>\n                  <LogInPage />\n                </PublicRoute>\n              }\n            ></Route>\n            <Route\n              path=\"register\"\n              element={\n                <PublicRoute restricted>\n                  <RegisterPage />\n                </PublicRoute>\n              }\n            ></Route>\n            <Route\n              path=\"contacts\"\n              element={\n                <PrivateRoute redirectPath=\"/login\">\n                  <ContactsPage />\n                </PrivateRoute>\n              }\n            ></Route>\n          </Routes>\n        </Suspense>\n        <ToastContainer />\n      </Container>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/es/integration/react';\nimport { store, persistor } from './redux/store';\nimport './index.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <App />\n        </PersistGate>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}